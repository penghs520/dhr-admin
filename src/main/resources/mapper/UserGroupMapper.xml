<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qinjee.admin.mapper.UserGroupMapper">

    <resultMap id="menuMap" type="com.qinjee.admin.entity.SysMenu">
        <id column="menu_id" property="menuId"></id>
        <result column="menu_name" property="menuName"></result>
        <result column="menu_code" property="menuCode"></result>
        <result column="func_type" property="funcType"></result>
        <result column="sort" property="sort"></result>
        <result column="parent_id" property="parentId"></result>
        <result column="has_role" property="hasRole"></result>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="userGroupId">
        insert into t_admin_user_group(user_group_name)
        values(#{userGroupName})
    </insert>

    <select id="selectMenus" resultMap="menuMap">
        SELECT m.menu_id,m.menu_name,m.menu_code,m.func_type,m.parent_id,m.sort,
        CASE WHEN u.user_group_id = ugm.user_group_id THEN 1 ELSE 0 END has_role
        FROM t_admin_sys_menu m
        LEFT JOIN t_admin_user_group_menu ugm ON m.menu_id = ugm.menu_id
        LEFT JOIN t_admin_user u ON u.user_group_id = ugm.user_group_id
        AND u.user_id =#{userId}
        order by m.sort
    </select>

    <select id="selectMenusByGroupId" resultMap="menuMap">
        SELECT m.menu_id,m.menu_name,m.menu_code,m.func_type,m.parent_id,m.sort,
        CASE WHEN ugm.user_group_id = ugm.user_group_id THEN 1 ELSE 0 END has_role
        FROM t_admin_sys_menu m
        LEFT JOIN t_admin_user_group_menu ugm ON m.menu_id = ugm.menu_id
        AND ugm.user_group_id =1
        ORDER BY m.sort
    </select>


    <insert id="insertGroupMenu" parameterType="com.qinjee.admin.entity.UserGroupMenu">
        insert into t_admin_user_group_menu(user_group_id,menu_id) values (#{userGroupId},#{menuId})
    </insert>

    <delete id="deleteGroupMenu">
        delete from t_admin_user_group_menu where user_group_id =#{userGroupId}
    </delete>

    <resultMap id="UserUnderGroupMap" type="com.qinjee.admin.model.vo.UserUnderGroupVo">
        <id column="user_id" property="userId"></id>
        <id column="user_no" property="userNo"></id>
        <result column="user_name" property="userName"></result>
        <result column="phone" property="phone"></result>
        <result column="email" property="email"></result>
        <result column="user_group_id" property="userGroupId"></result>
        <result column="user_group_name" property="userGroupName"></result>
        <collection property="menusNames" ofType="string">
            <result column="menu_name"></result>
        </collection>
    </resultMap>
    <select id="selectUserPage" resultMap="UserUnderGroupMap">
        SELECT u.user_id ,u.user_no,u.user_name,u.phone,u.email,u.user_group_id,ug.user_group_name,m.menu_name
        FROM t_admin_user u LEFT JOIN t_admin_user_group ug ON u.user_group_id = ug. user_group_id
        LEFT JOIN t_admin_user_group_menu ugm
        ON ug.user_group_id = ugm.user_group_id
        LEFT JOIN t_admin_sys_menu m
        ON m.menu_id = ugm.menu_id
        <where>
            <if test="query != null">
                <if test="query.email != null">
                    and u.email like concat('%',#{query.email},'%')
                </if>
                <if test="query.phone != null">
                    and u.phone like concat('%',#{query.phone},'%')
                </if>
                <if test="query.userGroupId != null">
                    and u.user_group_id = #{query.userGroupId}
                </if>
                <if test="query.userName != null">
                    and u.user_name like concat('%',#{query.userName},'%')
                </if>
            </if>
        </where>
    </select>

    <select id="selectById" resultType="com.qinjee.admin.model.vo.UserGroupVo">
        select user_group_id,user_group_name
        from t_admin_user_group where user_group_id =#{userGroupId}
    </select>

    <delete id="deleteById">
        delete from t_admin_user_group where user_group_id =#{userGroupId}
    </delete>
    <update id="updateById">
        update t_admin_user_group
        set user_group_name = #{userGroupName}
        where user_group_id = #{userGroupId}
    </update>

    <select id="list" resultType="com.qinjee.admin.entity.UserGroup">
        select user_group_id,user_group_name
        from t_admin_user_group
        order by sort
    </select>

</mapper>
